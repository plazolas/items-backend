package com.oz.demojar.dao;

import com.oz.demojar.model.User;
import com.oz.demojar.mysqlDatasource.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Primary;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;

@Primary
@Repository("user")
class UserDaoImpl implements UserDao {

    @Autowired // This means to get the bean called UserDataSource Which is auto-generated by Spring, we will use it to handle the data
    private transient UserRepository userRepository;

    @Override
    public List<User> selectAllUsers() {
        return userRepository.findAll();
    }

    @Override
    public int deleteUserById(Long id) {
        Optional<User> Op = getUserById(id);
        if(Op.isPresent()){
            userRepository.delete(Op.get());
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public Optional<User> getUserById(Long id) {
        return userRepository.findById(id);
    }

    public Optional<User> getUserByUsername(String name) {
        return userRepository.findByUsername(name);
    }

    public void save(User user) {
        User newUser = userRepository.save(user);
        System.out.println(newUser.getId().toString() + " | " + newUser.getUsername() + " | " + newUser.getPassword());
    }

    public long findLastId() {
        return userRepository.findLastId();
    }

}

